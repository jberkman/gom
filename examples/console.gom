<?xml version="1.0" encoding="UTF-8"?>
<gom xmlns="http://ilovegom.org/Gom">
  <config>
    <module name="gtk+-2.0"/>
  </config>
  <app>
    <script contentType="text/javascript" src="jquery-1.2.3.js"></script>
    <GtkWindow id="win" title="Gom Console"
               widthRequest="400" heightRequest="300" borderWidth="6"
               ondeleteEvent="quit();"
               xmlns="http://ilovegom.org/Gtk">
      <GtkVBox spacing="6">
        <GtkScrolledWindow expand="true" fill="true"
                           hscrollbarPolicy="GTK_POLICY_AUTOMATIC"
                           vscrollbarPolicy="GTK_POLICY_ALWAYS"
                           shadowType="GTK_SHADOW_IN">
          <GtkTextView id="output" wrapMode="GTK_WRAP_WORD" editable="false"/>
        </GtkScrolledWindow>
	<GtkHBox spacing="6" expand="false" fill="false">
	  <GtkEntry id="entry" expand="true" fill="true"/>
          <GtkLabel id="x" expand="false" fill="false"/>
          <GtkLabel id="y" expand="false" fill="false"/>
<!--
          <GtkButton id="go" label="Go" expand="false" fill="false"/>
 -->
        </GtkHBox>
      </GtkVBox>
    </GtkWindow>
    <script contentType="text/javascript"><![CDATA[
      (function(){
	  var history = [];
          var histIdx = -1;
          function append (text) {
              $('#output').get (0).buffer.text += text + '\n';
          }
          $('#entry').bind ('DOMActivate', function (evt) {
              if (this.text) {
                  history.unshift (this.text);
                  histIdx = -1;
	          try {
                      append (eval (this.text));
                  } catch (e) {
                      append ('Exception: ' + e);
                  }
	          this.text = '';
              }
          }).bind ('keydown', function (evt) {
              switch (evt.keyIdentifier) {
                case "Up":
                  if (evt.altKey || evt.metaKey || evt.ctrlKey || evt.shiftKey) {
                      break;
                  }
                  ++histIdx;
                  histIdx %= history.length;
                  if (history.length) {
                      this.text = history[histIdx];
	              this.text.cursorPosition = history[histIdx].length - 1;
                  }
                  return false;
                case "Down":
                  if (evt.altKey || evt.metaKey || evt.ctrlKey || evt.shiftKey) {
                      break;
                  }
                  if (--histIdx < 0) {
                      histIdx = -1;
                      this.text = '';
                  } else {
                      this.text = history[histIdx];
	              this.text.cursorPosition = history[histIdx].length - 1;
                  }
                  return false;
              }
          });
	  $('#win').bind ('mousemove', function (evt) {
              $('#x').get (0).label = evt.clientX;
              $('#y').get (0).label = evt.clientY;
/*
          }).bind ('DOMFocusIn DOMFocusOut keydown', function (evt) {
              append (evt.type + ': ' + evt.target.tagName);
*/
	  });
      })();
    ]]></script>
  </app>
</gom>
